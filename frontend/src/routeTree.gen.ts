/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as StudentsIndexRouteImport } from './routes/students/index'
import { Route as StatisticsIndexRouteImport } from './routes/statistics/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as CoursesIndexRouteImport } from './routes/courses/index'
import { Route as CoursesCourseIdRouteRouteImport } from './routes/courses/$courseId/route'
import { Route as CoursesCourseIdIndexRouteImport } from './routes/courses/$courseId/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentsIndexRoute = StudentsIndexRouteImport.update({
  id: '/students/',
  path: '/students/',
  getParentRoute: () => rootRouteImport,
} as any)
const StatisticsIndexRoute = StatisticsIndexRouteImport.update({
  id: '/statistics/',
  path: '/statistics/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesIndexRoute = CoursesIndexRouteImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesCourseIdRouteRoute = CoursesCourseIdRouteRouteImport.update({
  id: '/courses/$courseId',
  path: '/courses/$courseId',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesCourseIdIndexRoute = CoursesCourseIdIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CoursesCourseIdRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/courses/$courseId': typeof CoursesCourseIdRouteRouteWithChildren
  '/courses': typeof CoursesIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/statistics': typeof StatisticsIndexRoute
  '/students': typeof StudentsIndexRoute
  '/courses/$courseId/': typeof CoursesCourseIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/courses': typeof CoursesIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/statistics': typeof StatisticsIndexRoute
  '/students': typeof StudentsIndexRoute
  '/courses/$courseId': typeof CoursesCourseIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/courses/$courseId': typeof CoursesCourseIdRouteRouteWithChildren
  '/courses/': typeof CoursesIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/statistics/': typeof StatisticsIndexRoute
  '/students/': typeof StudentsIndexRoute
  '/courses/$courseId/': typeof CoursesCourseIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/courses/$courseId'
    | '/courses'
    | '/dashboard'
    | '/statistics'
    | '/students'
    | '/courses/$courseId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/courses'
    | '/dashboard'
    | '/statistics'
    | '/students'
    | '/courses/$courseId'
  id:
    | '__root__'
    | '/'
    | '/courses/$courseId'
    | '/courses/'
    | '/dashboard/'
    | '/statistics/'
    | '/students/'
    | '/courses/$courseId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CoursesCourseIdRouteRoute: typeof CoursesCourseIdRouteRouteWithChildren
  CoursesIndexRoute: typeof CoursesIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  StatisticsIndexRoute: typeof StatisticsIndexRoute
  StudentsIndexRoute: typeof StudentsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/students/': {
      id: '/students/'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof StudentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/statistics/': {
      id: '/statistics/'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof StatisticsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/': {
      id: '/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/$courseId': {
      id: '/courses/$courseId'
      path: '/courses/$courseId'
      fullPath: '/courses/$courseId'
      preLoaderRoute: typeof CoursesCourseIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/$courseId/': {
      id: '/courses/$courseId/'
      path: '/'
      fullPath: '/courses/$courseId/'
      preLoaderRoute: typeof CoursesCourseIdIndexRouteImport
      parentRoute: typeof CoursesCourseIdRouteRoute
    }
  }
}

interface CoursesCourseIdRouteRouteChildren {
  CoursesCourseIdIndexRoute: typeof CoursesCourseIdIndexRoute
}

const CoursesCourseIdRouteRouteChildren: CoursesCourseIdRouteRouteChildren = {
  CoursesCourseIdIndexRoute: CoursesCourseIdIndexRoute,
}

const CoursesCourseIdRouteRouteWithChildren =
  CoursesCourseIdRouteRoute._addFileChildren(CoursesCourseIdRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CoursesCourseIdRouteRoute: CoursesCourseIdRouteRouteWithChildren,
  CoursesIndexRoute: CoursesIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  StatisticsIndexRoute: StatisticsIndexRoute,
  StudentsIndexRoute: StudentsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
